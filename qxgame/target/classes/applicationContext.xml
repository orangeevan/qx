<?xml version="1.0" encoding="utf-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:resource="http://www.haipaite.com/common/resource"
	   xmlns:ramcache="http://www.haipaite.com/common/ramcache"
	   xmlns:event="http://www.haipaite.com/common/event"
	   xsi:schemaLocation=" http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.haipaite.com/common/resource
       http://www.haipaite.com/common/resource/resource-1.0.xsd
       http://www.haipaite.com/common/ramcache
       http://www.haipaite.com/common/ramcache/ramcache-1.0.xsd
       http://www.haipaite.com/common/event
       http://www.haipaite.com/common/event/event-1.0.xsd ">
	<!-- 事务拦截配置 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 配置文件载入配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>server.properties</value>
				<value>jdbc.properties</value>
			</list>
		</property>
	</bean>
	<!-- 开启注释配置 -->
	<context:annotation-config />

	<!-- 自动包扫描配置 -->
	<context:component-scan base-package="com.haipaite.common.resource" />
	<context:component-scan base-package="com.haipaite" />
	<context:component-scan base-package="com.mmorpg.qx" />
	<context:component-scan base-package="com.mmorpg.qx.**.packet">
		<context:include-filter type="annotation" expression="com.mmorpg.qx.common.socket.annotation.SocketPacket" />
	</context:component-scan>
	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="select ''" />
		<property name="timeBetweenEvictionRunsMillis" value="5000"/>
		<property name="numTestsPerEvictionRun" value="10"/>
		<property name="testOnBorrow" value="true"/>
		<property name="testWhileIdle" value="true"/>
		<property name="initialSize" value="10"/>
		<property name="maxActive" value="50"/>
		<property name="maxIdle" value="5"/>
		<property name="minIdle" value="1"/>
	</bean>
	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.mmorpg.qx.*.*.entity"/>
		<property name="hibernateProperties">
			<props>
				<prop key="current_session_context_class">thread</prop>
				<prop key="cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<bean id="accessor" class="com.haipaite.common.ramcache.orm.impl.HibernateAccessor">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="querier" class="com.haipaite.common.ramcache.orm.impl.HibernateQuerier">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<ramcache:config id="cacheService" lockAspect="true">
		<ramcache:accessor ref="accessor" />
		<ramcache:querier ref="querier" />
		<ramcache:constants>
			<ramcache:constant name="ten" size="10" />
			<ramcache:constant name="maxOnline" size="6000" />
		</ramcache:constants>
		<ramcache:persist config="10" type="TIMING">
			<ramcache:persister name="10s" config="10" type="TIMING" />
			<ramcache:persister name="30s" config="30" type="TIMING" />
			<ramcache:persister name="60s" config="60" type="TIMING" />
		</ramcache:persist>
		<ramcache:entity>
			<ramcache:package name="com.mmorpg.qx.**.entity" />
		</ramcache:entity>
	</ramcache:config>
	<!-- 定时器修正参数 -->
	<bean id="scheduling_delay_time" class="java.lang.Long">
		<constructor-arg value="1000"/>
	</bean>
	<!-- 事件模块 -->
	<event:config base-package="com.mmorpg.qx.common.event"/>
	<!-- 静态资源配置 -->
	<bean class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.haipaite.common.resource.support.StringToDateConverter" />
				<bean class="com.haipaite.common.resource.support.StringToClassConverter" />
				<bean class="com.haipaite.common.resource.support.JsonToMapConverter" />
				<bean class="com.haipaite.common.resource.support.JsonToArrayConverter" />
				<bean class="com.haipaite.common.resource.support.StringToList" />
			</list>
		</property>

	</bean>
	<resource:config id="resourceManager">
		<resource:format location="resource" type="excel" suffix="xlsx" />
		<resource:package name="com.mmorpg.qx" />
	</resource:config>

</beans>
